{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "ticketID",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "ticketID",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ticketID",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eventName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ticketID",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ticketID",
          "type": "uint256"
        }
      ],
      "name": "holderNameOf",
      "outputs": [
        {
          "internalType": "string",
          "name": "holderName",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ticketID",
          "type": "uint256"
        }
      ],
      "name": "holderOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ticketID",
          "type": "uint256"
        }
      ],
      "name": "isExpiredOrUsed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxNumberOfTickets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "holderName",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ticketID",
          "type": "uint256"
        }
      ],
      "name": "setUsed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ticketID",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ticketID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "newName",
          "type": "string"
        }
      ],
      "name": "updateHolderName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "creator()": "02d05d3f",
    "eventName()": "8043c9c0",
    "getApproved(uint256)": "081812fc",
    "holderNameOf(uint256)": "600580d5",
    "holderOf(uint256)": "dbacc237",
    "isExpiredOrUsed(uint256)": "1ac0d8ac",
    "maxNumberOfTickets()": "fdf8a44e",
    "mint(address,string)": "d0def521",
    "setUsed(uint256)": "8543016c",
    "transferFrom(address,address,uint256)": "23b872dd",
    "updateHolderName(uint256,string)": "7b615c4b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"ticketID\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"ticketID\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ticketID\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketID\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketID\",\"type\":\"uint256\"}],\"name\":\"holderNameOf\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"holderName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketID\",\"type\":\"uint256\"}],\"name\":\"holderOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketID\",\"type\":\"uint256\"}],\"name\":\"isExpiredOrUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxNumberOfTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"holderName\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketID\",\"type\":\"uint256\"}],\"name\":\"setUsed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ticketID\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"}],\"name\":\"updateHolderName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface for the TicketNFT contract. A ticket NFT is a non-fungible token that represents a single entry to an event.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `holder` enables `approved` to manage the `ticketID` ticket.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `ticketID` ticket is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `ticketID` ticket to another account. The approval is cleared when the ticket is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the ticket - `ticketID` must exist. Emits an `Approval` event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tickets a `holder` has.\"},\"creator()\":{\"details\":\"Returns the address of the user who created the NFT collection This is the address of the user who called `createNewEvent` in the primary market\"},\"eventName()\":{\"details\":\"Returns the name of the event for this TicketNFT\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `ticketID` ticket. Requirements: - `ticketID` must exist.\"},\"holderNameOf(uint256)\":{\"details\":\"Returns the current `holderName` associated with a `ticketID`. Requirements: - `ticketID` must exist.\"},\"holderOf(uint256)\":{\"details\":\"Returns the address of the holder of the `ticketID` ticket. Requirements: - `ticketID` must exist.\"},\"isExpiredOrUsed(uint256)\":{\"details\":\"Returns `true` if the `used` flag associated with a `ticketID` if `true` or if the ticket has expired, i.e., the current time is greater than the ticket's `expiryDate`. Requirements: - `ticketID` must exist\"},\"maxNumberOfTickets()\":{\"details\":\"Returns the maximum number of tickets that can be minted for this event.\"},\"setUsed(uint256)\":{\"details\":\"Sets the `used` flag associated with a `ticketID` to `true` Requirements: - `ticketID` must exist - the ticket must not already be used - the ticket must not be expired - Only the creator of the collection can call this function\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `ticketID` ticket from `from` to `to`. This should also set the approved address for this ticket to the zero address Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - the caller must either:   - own `ticketID`   - be approved to move this ticket using `approve` Emits a `Transfer` and an `Approval` event.\"},\"updateHolderName(uint256,string)\":{\"details\":\"Updates the `holderName` associated with a `ticketID`. Note that this does not update the actual holder of the ticket. Requirements: - `ticketID` must exists - Only the current holder can call this function\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mint(address,string)\":{\"notice\":\"Mints a new ticket for `holder` with `holderName`. The ticket must be assigned the following metadata: - A unique ticket ID. Once a ticket has been used or expired, its ID should not be reallocated - An expiry time of 10 days from the time of minting - A boolean `used` flag set to false On minting, a `Transfer` event should be emitted with `from` set to the zero address. Requirements: - The caller must be the primary market\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ITicketNFT.sol\":\"ITicketNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/interfaces/ITicketNFT.sol\":{\"keccak256\":\"0x681d6831ccb120d42d44f201a8b7160bd383e7dff37b099489c21f0082316036\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6db545e611cda160092aae8fdde8cd70624181553300688bc74078cc11376640\",\"dweb:/ipfs/QmSLgoyug7UJCbG9ueGhX2xUMXZijHhuw6p7DUnYmW6jzn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.10+commit.fc410830"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "ticketID",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "ticketID",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "ticketID",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eventName",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "ticketID",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "ticketID",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "holderNameOf",
          "outputs": [
            {
              "internalType": "string",
              "name": "holderName",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "ticketID",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "holderOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "ticketID",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isExpiredOrUsed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxNumberOfTickets",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "holderName",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "ticketID",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUsed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "ticketID",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "ticketID",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "newName",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateHolderName"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `ticketID` ticket to another account. The approval is cleared when the ticket is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the ticket - `ticketID` must exist. Emits an `Approval` event."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tickets a `holder` has."
          },
          "creator()": {
            "details": "Returns the address of the user who created the NFT collection This is the address of the user who called `createNewEvent` in the primary market"
          },
          "eventName()": {
            "details": "Returns the name of the event for this TicketNFT"
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `ticketID` ticket. Requirements: - `ticketID` must exist."
          },
          "holderNameOf(uint256)": {
            "details": "Returns the current `holderName` associated with a `ticketID`. Requirements: - `ticketID` must exist."
          },
          "holderOf(uint256)": {
            "details": "Returns the address of the holder of the `ticketID` ticket. Requirements: - `ticketID` must exist."
          },
          "isExpiredOrUsed(uint256)": {
            "details": "Returns `true` if the `used` flag associated with a `ticketID` if `true` or if the ticket has expired, i.e., the current time is greater than the ticket's `expiryDate`. Requirements: - `ticketID` must exist"
          },
          "maxNumberOfTickets()": {
            "details": "Returns the maximum number of tickets that can be minted for this event."
          },
          "setUsed(uint256)": {
            "details": "Sets the `used` flag associated with a `ticketID` to `true` Requirements: - `ticketID` must exist - the ticket must not already be used - the ticket must not be expired - Only the creator of the collection can call this function"
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `ticketID` ticket from `from` to `to`. This should also set the approved address for this ticket to the zero address Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - the caller must either:   - own `ticketID`   - be approved to move this ticket using `approve` Emits a `Transfer` and an `Approval` event."
          },
          "updateHolderName(uint256,string)": {
            "details": "Updates the `holderName` associated with a `ticketID`. Note that this does not update the actual holder of the ticket. Requirements: - `ticketID` must exists - Only the current holder can call this function"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "mint(address,string)": {
            "notice": "Mints a new ticket for `holder` with `holderName`. The ticket must be assigned the following metadata: - A unique ticket ID. Once a ticket has been used or expired, its ID should not be reallocated - An expiry time of 10 days from the time of minting - A boolean `used` flag set to false On minting, a `Transfer` event should be emitted with `from` set to the zero address. Requirements: - The caller must be the primary market"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/ITicketNFT.sol": "ITicketNFT"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/ITicketNFT.sol": {
        "keccak256": "0x681d6831ccb120d42d44f201a8b7160bd383e7dff37b099489c21f0082316036",
        "urls": [
          "bzz-raw://6db545e611cda160092aae8fdde8cd70624181553300688bc74078cc11376640",
          "dweb:/ipfs/QmSLgoyug7UJCbG9ueGhX2xUMXZijHhuw6p7DUnYmW6jzn"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/ITicketNFT.sol",
    "id": 28748,
    "exportedSymbols": {
      "ITicketNFT": [
        28747
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:5009:22",
    "nodes": [
      {
        "id": 28627,
        "nodeType": "PragmaDirective",
        "src": "40:24:22",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 28747,
        "nodeType": "ContractDefinition",
        "src": "219:4828:22",
        "nodes": [
          {
            "id": 28637,
            "nodeType": "EventDefinition",
            "src": "345:117:22",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 28629,
              "nodeType": "StructuredDocumentation",
              "src": "247:92:22",
              "text": " @dev Emitted when `ticketID` ticket is transferred from `from` to `to`."
            },
            "name": "Transfer",
            "nameLocation": "351:8:22",
            "parameters": {
              "id": 28636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28631,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "386:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28637,
                  "src": "370:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28633,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "417:2:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28637,
                  "src": "401:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "401:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28635,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "ticketID",
                  "nameLocation": "446:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28637,
                  "src": "430:24:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "430:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "359:102:22"
            }
          },
          {
            "id": 28646,
            "nodeType": "EventDefinition",
            "src": "575:125:22",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 28638,
              "nodeType": "StructuredDocumentation",
              "src": "470:99:22",
              "text": " @dev Emitted when `holder` enables `approved` to manage the `ticketID` ticket."
            },
            "name": "Approval",
            "nameLocation": "581:8:22",
            "parameters": {
              "id": 28645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28640,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "616:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28646,
                  "src": "600:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28639,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "600:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28642,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "649:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28646,
                  "src": "633:24:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "633:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28644,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "ticketID",
                  "nameLocation": "684:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28646,
                  "src": "668:24:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "589:110:22"
            }
          },
          {
            "id": 28652,
            "nodeType": "FunctionDefinition",
            "src": "892:51:22",
            "nodes": [],
            "documentation": {
              "id": 28647,
              "nodeType": "StructuredDocumentation",
              "src": "708:178:22",
              "text": " @dev Returns the address of the user who created the NFT collection\n This is the address of the user who called `createNewEvent` in the primary market"
            },
            "functionSelector": "02d05d3f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "creator",
            "nameLocation": "901:7:22",
            "parameters": {
              "id": 28648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "908:2:22"
            },
            "returnParameters": {
              "id": 28651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28650,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28652,
                  "src": "934:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "934:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "933:9:22"
            },
            "scope": 28747,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28658,
            "nodeType": "FunctionDefinition",
            "src": "1055:62:22",
            "nodes": [],
            "documentation": {
              "id": 28653,
              "nodeType": "StructuredDocumentation",
              "src": "951:98:22",
              "text": " @dev Returns the maximum number of tickets that can be minted for this event."
            },
            "functionSelector": "fdf8a44e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "maxNumberOfTickets",
            "nameLocation": "1064:18:22",
            "parameters": {
              "id": 28654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1082:2:22"
            },
            "returnParameters": {
              "id": 28657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28656,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28658,
                  "src": "1108:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28655,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1108:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1107:9:22"
            },
            "scope": 28747,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28664,
            "nodeType": "FunctionDefinition",
            "src": "1202:59:22",
            "nodes": [],
            "documentation": {
              "id": 28659,
              "nodeType": "StructuredDocumentation",
              "src": "1122:74:22",
              "text": " @dev Returns the name of the event for this TicketNFT"
            },
            "functionSelector": "8043c9c0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "eventName",
            "nameLocation": "1211:9:22",
            "parameters": {
              "id": 28660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1220:2:22"
            },
            "returnParameters": {
              "id": 28663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28662,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28664,
                  "src": "1246:13:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28661,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1246:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1245:15:22"
            },
            "scope": 28747,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28674,
            "nodeType": "FunctionDefinition",
            "src": "1795:86:22",
            "nodes": [],
            "documentation": {
              "id": 28665,
              "nodeType": "StructuredDocumentation",
              "src": "1269:520:22",
              "text": " Mints a new ticket for `holder` with `holderName`.\n The ticket must be assigned the following metadata:\n - A unique ticket ID. Once a ticket has been used or expired, its ID should not be reallocated\n - An expiry time of 10 days from the time of minting\n - A boolean `used` flag set to false\n On minting, a `Transfer` event should be emitted with `from` set to the zero address.\n Requirements:\n - The caller must be the primary market"
            },
            "functionSelector": "d0def521",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1804:4:22",
            "parameters": {
              "id": 28670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28667,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "1817:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28674,
                  "src": "1809:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1809:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28669,
                  "mutability": "mutable",
                  "name": "holderName",
                  "nameLocation": "1839:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28674,
                  "src": "1825:24:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28668,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1825:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1808:42:22"
            },
            "returnParameters": {
              "id": 28673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28672,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1877:2:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28674,
                  "src": "1869:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1869:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1868:12:22"
            },
            "scope": 28747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28682,
            "nodeType": "FunctionDefinition",
            "src": "1966:75:22",
            "nodes": [],
            "documentation": {
              "id": 28675,
              "nodeType": "StructuredDocumentation",
              "src": "1889:71:22",
              "text": " @dev Returns the number of tickets a `holder` has."
            },
            "functionSelector": "70a08231",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1975:9:22",
            "parameters": {
              "id": 28678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28677,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "1993:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28682,
                  "src": "1985:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1985:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1984:16:22"
            },
            "returnParameters": {
              "id": 28681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28680,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "2032:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28682,
                  "src": "2024:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2024:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2023:17:22"
            },
            "scope": 28747,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28690,
            "nodeType": "FunctionDefinition",
            "src": "2211:75:22",
            "nodes": [],
            "documentation": {
              "id": 28683,
              "nodeType": "StructuredDocumentation",
              "src": "2049:156:22",
              "text": " @dev Returns the address of the holder of the `ticketID` ticket.\n Requirements:\n - `ticketID` must exist."
            },
            "functionSelector": "dbacc237",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "holderOf",
            "nameLocation": "2220:8:22",
            "parameters": {
              "id": 28686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28685,
                  "mutability": "mutable",
                  "name": "ticketID",
                  "nameLocation": "2237:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28690,
                  "src": "2229:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2229:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2228:18:22"
            },
            "returnParameters": {
              "id": 28689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28688,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "2278:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28690,
                  "src": "2270:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28687,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2270:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2269:16:22"
            },
            "scope": 28747,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28700,
            "nodeType": "FunctionDefinition",
            "src": "2767:109:22",
            "nodes": [],
            "documentation": {
              "id": 28691,
              "nodeType": "StructuredDocumentation",
              "src": "2294:467:22",
              "text": " @dev Transfers `ticketID` ticket from `from` to `to`.\n This should also set the approved address for this ticket to the zero address\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - the caller must either:\n   - own `ticketID`\n   - be approved to move this ticket using `approve`\n Emits a `Transfer` and an `Approval` event."
            },
            "functionSelector": "23b872dd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "2776:12:22",
            "parameters": {
              "id": 28698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28693,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2807:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28700,
                  "src": "2799:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2799:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28695,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2830:2:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28700,
                  "src": "2822:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2822:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28697,
                  "mutability": "mutable",
                  "name": "ticketID",
                  "nameLocation": "2851:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28700,
                  "src": "2843:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2843:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2788:78:22"
            },
            "returnParameters": {
              "id": 28699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2875:0:22"
            },
            "scope": 28747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28708,
            "nodeType": "FunctionDefinition",
            "src": "3331:56:22",
            "nodes": [],
            "documentation": {
              "id": 28701,
              "nodeType": "StructuredDocumentation",
              "src": "2884:441:22",
              "text": " @dev Gives permission to `to` to transfer `ticketID` ticket to another account.\n The approval is cleared when the ticket is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the ticket\n - `ticketID` must exist.\n Emits an `Approval` event."
            },
            "functionSelector": "095ea7b3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3340:7:22",
            "parameters": {
              "id": 28706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28703,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3356:2:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28708,
                  "src": "3348:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3348:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28705,
                  "mutability": "mutable",
                  "name": "ticketID",
                  "nameLocation": "3368:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28708,
                  "src": "3360:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3360:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3347:30:22"
            },
            "returnParameters": {
              "id": 28707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3386:0:22"
            },
            "scope": 28747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28716,
            "nodeType": "FunctionDefinition",
            "src": "3549:107:22",
            "nodes": [],
            "documentation": {
              "id": 28709,
              "nodeType": "StructuredDocumentation",
              "src": "3395:148:22",
              "text": " @dev Returns the account approved for `ticketID` ticket.\n Requirements:\n - `ticketID` must exist."
            },
            "functionSelector": "081812fc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3558:11:22",
            "parameters": {
              "id": 28712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28711,
                  "mutability": "mutable",
                  "name": "ticketID",
                  "nameLocation": "3578:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28716,
                  "src": "3570:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3570:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3569:18:22"
            },
            "returnParameters": {
              "id": 28715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28714,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3646:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28716,
                  "src": "3638:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3638:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3637:18:22"
            },
            "scope": 28747,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28724,
            "nodeType": "FunctionDefinition",
            "src": "3821:116:22",
            "nodes": [],
            "documentation": {
              "id": 28717,
              "nodeType": "StructuredDocumentation",
              "src": "3664:151:22",
              "text": " @dev Returns the current `holderName` associated with a `ticketID`.\n Requirements:\n - `ticketID` must exist."
            },
            "functionSelector": "600580d5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "holderNameOf",
            "nameLocation": "3830:12:22",
            "parameters": {
              "id": 28720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28719,
                  "mutability": "mutable",
                  "name": "ticketID",
                  "nameLocation": "3851:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28724,
                  "src": "3843:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3843:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3842:18:22"
            },
            "returnParameters": {
              "id": 28723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28722,
                  "mutability": "mutable",
                  "name": "holderName",
                  "nameLocation": "3925:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28724,
                  "src": "3911:24:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28721,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3911:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3910:26:22"
            },
            "scope": 28747,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28732,
            "nodeType": "FunctionDefinition",
            "src": "4231:87:22",
            "nodes": [],
            "documentation": {
              "id": 28725,
              "nodeType": "StructuredDocumentation",
              "src": "3945:280:22",
              "text": " @dev Updates the `holderName` associated with a `ticketID`.\n Note that this does not update the actual holder of the ticket.\n Requirements:\n - `ticketID` must exists\n - Only the current holder can call this function"
            },
            "functionSelector": "7b615c4b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateHolderName",
            "nameLocation": "4240:16:22",
            "parameters": {
              "id": 28730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28727,
                  "mutability": "mutable",
                  "name": "ticketID",
                  "nameLocation": "4265:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28732,
                  "src": "4257:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28726,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4257:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28729,
                  "mutability": "mutable",
                  "name": "newName",
                  "nameLocation": "4291:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28732,
                  "src": "4275:23:22",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28728,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4275:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4256:43:22"
            },
            "returnParameters": {
              "id": 28731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4317:0:22"
            },
            "scope": 28747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28738,
            "nodeType": "FunctionDefinition",
            "src": "4642:44:22",
            "nodes": [],
            "documentation": {
              "id": 28733,
              "nodeType": "StructuredDocumentation",
              "src": "4326:310:22",
              "text": " @dev Sets the `used` flag associated with a `ticketID` to `true`\n Requirements:\n - `ticketID` must exist\n - the ticket must not already be used\n - the ticket must not be expired\n - Only the creator of the collection can call this function"
            },
            "functionSelector": "8543016c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setUsed",
            "nameLocation": "4651:7:22",
            "parameters": {
              "id": 28736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28735,
                  "mutability": "mutable",
                  "name": "ticketID",
                  "nameLocation": "4667:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28738,
                  "src": "4659:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28734,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4659:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4658:18:22"
            },
            "returnParameters": {
              "id": 28737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4685:0:22"
            },
            "scope": 28747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28746,
            "nodeType": "FunctionDefinition",
            "src": "4972:72:22",
            "nodes": [],
            "documentation": {
              "id": 28739,
              "nodeType": "StructuredDocumentation",
              "src": "4694:272:22",
              "text": " @dev Returns `true` if the `used` flag associated with a `ticketID` if `true`\n or if the ticket has expired, i.e., the current time is greater than the ticket's\n `expiryDate`.\n Requirements:\n - `ticketID` must exist"
            },
            "functionSelector": "1ac0d8ac",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isExpiredOrUsed",
            "nameLocation": "4981:15:22",
            "parameters": {
              "id": 28742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28741,
                  "mutability": "mutable",
                  "name": "ticketID",
                  "nameLocation": "5005:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28746,
                  "src": "4997:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4997:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4996:18:22"
            },
            "returnParameters": {
              "id": 28745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28744,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28746,
                  "src": "5038:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28743,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5038:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5037:6:22"
            },
            "scope": 28747,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ITicketNFT",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 28628,
          "nodeType": "StructuredDocumentation",
          "src": "68:149:22",
          "text": " @dev Required interface for the TicketNFT contract.\n A ticket NFT is a non-fungible token that represents a single entry to an event."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          28747
        ],
        "name": "ITicketNFT",
        "nameLocation": "229:10:22",
        "scope": 28748,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 22
}